version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: app-proposta
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"


  backend-proposta-app:
    build:
      context: /app-proposta/.
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/app-proposta?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_LISTENER_SIMPLE_RETRY_ENABLED: true
      RABBITMQ_LISTENER_SIMPLE_RETRY_MAX_ATTEMPTS: 3
      propostapendent_exchange: proposta-pendente.ex
      propostapendentdlq_exchange: proposta-pendente-dlq.ex
      propostaconcluida_exchange: proposta-concluida.ex
      propostaconcluidadlq_exchange: proposta-concluida-dlq.ex

  backend-notificacao-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
#      RABBITMQ_HOST: localhost
#      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_LISTENER_SIMPLE_RETRY_ENABLED: true
      RABBITMQ_LISTENER_SIMPLE_RETRY_MAX_ATTEMPTS: 3

  backend-analise-credito-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq

    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
#      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_LISTENER_SIMPLE_RETRY_ENABLED: true
      RABBITMQ_LISTENER_SIMPLE_RETRY_MAX_ATTEMPTS: 3

#  frontend:
#    image: matheuspieropan/proposta-web
#    ports:
#      - "3000:80"
##    depends_on:
##      - backend

volumes:
  db-data: